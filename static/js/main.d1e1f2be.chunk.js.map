{"version":3,"sources":["Components/Editor.js","Components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["axios","require","url","config","window","location","origin","toString","Editor","language","TitleName","value","onChange","fileName","a","post","api_dev_key","api_option","api_paste_code","api_paste_name","then","response","alert","catch","err","className","style","marginTop","color","onClick","GetSharableLink","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","scrollbarStyle","Index","Ext","fileNames","Main","useState","selectedLanguage","setSelectedLanguage","LanguageIndex","setLanguageIndex","html","setHtml","css","setCss","js","setJs","SrcFile","setSrcFile","useEffect","timeout","setTimeout","clearTimeout","explorer","map","file","idx","ChangeSelectedLanguage","id","marginRight","srcDoc","title","sandbox","frameBorder","width","height","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1e1f2be.chunk.js","sourcesContent":["import 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/theme/material.css';\r\nimport 'codemirror/mode/xml/xml';\r\nimport 'codemirror/mode/css/css';\r\nimport 'codemirror/mode/javascript/javascript';\r\nimport \"../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../App.css\";\r\nimport {FaShareAltSquare} from \"react-icons/fa\"\r\nimport { Controlled } from 'react-codemirror2';\r\n\r\n\r\nconst axios = require(\"axios\");\r\n\r\n\r\n// Proxy server for resolving CORS Error\r\nconst url = \"https://cors-anywhere.herokuapp.com/https://pastebin.com/api/api_post.php\";\r\n\r\n// Header calues to be sent via Axios\r\nlet config = {\r\n    \"Access-Control-Allow-Origin\": window.location.origin.toString(),\r\n    \"Access-Control-Allow-Credentials\":true,\r\n    \"Access-Control-Allow-Methods\" : \"POST\",\r\n    \"Access-Control-Allow-Headers\":\"Content-Type\"\r\n}\r\n\r\n// Editor Component\r\nfunction Editor({language,TitleName,value,onChange,fileName}){\r\n\r\n    // Function handler to update state value with editor value\r\n    function handleChange(editor,data,value){\r\n        onChange(value)\r\n    }\r\n\r\n    // Function to get the shareable link of the code with the file name\r\n    async function GetSharableLink(){\r\n        await axios.post(url,{\r\n            api_dev_key:'Ct9mTFHBnNDXoqPE05KdOatFFsgzwfuJ', \r\n            api_option:\"paste\",\r\n            api_paste_code:{value},\r\n            api_paste_name:{fileName}\r\n        },config).then((response) => {\r\n            window.alert(\"Your Sharable Link : \",response);\r\n        }).catch((err)=>{\r\n            window.alert(\"We are facing problem getting you a shareable link!\"); \r\n        });\r\n    };\r\n\r\n    return(\r\n        <div className=\"editor-container\">\r\n            <div className=\"editor-title\" style={{marginTop:\"15px\",color:\"white\"}}>\r\n                <span><b>index.{TitleName}</b></span>\r\n                <span className=\"shareBtn\" onClick={() => GetSharableLink()}>\r\n                    <FaShareAltSquare/>                    \r\n                </span>\r\n            </div>\r\n            <br/>\r\n            <Controlled\r\n                onBeforeChange={handleChange}\r\n                value={value}\r\n                className=\"code-mirror-wrapper\"\r\n                options={{\r\n                    lineWrapping:true,\r\n                    lint:true,\r\n                    mode:language,\r\n                    theme:\"material\",\r\n                    lineNumbers:true,  \r\n                    scrollbarStyle:null                  \r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Editor;","import { useEffect, useState } from 'react';\r\nimport \"../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../App.css\";\r\nimport Editor from \"./Editor\";\r\nimport {BsCodeSlash} from \"react-icons/bs\";\r\n\r\n\r\n// Constant objects to get the Extension Index and Extension names\r\nconst Index ={\r\n    'xml' : 0,\r\n    'css' : 1,\r\n    'js' : 2\r\n}\r\n\r\nconst Ext = {\r\n    0 : \"xml\",\r\n    1 : \"css\",\r\n    2 : \"js\"\r\n}\r\n\r\n// List of filenames\r\nconst fileNames = [\"index.html\",\"index.css\",\"index.js\"]\r\n\r\nfunction Main(){\r\n\r\n    // Initializing State Variables\r\n    const [selectedLanguage,setSelectedLanguage] = useState('xml');\r\n    const [LanguageIndex,setLanguageIndex] = useState(1);\r\n    const [html,setHtml] = useState('');\r\n    const [css,setCss] = useState('');\r\n    const [js,setJs] = useState('');\r\n    const [SrcFile,setSrcFile] = useState('')\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            setSrcFile(`\r\n            <html>\r\n                <body>${html}</body>\r\n                <style>${css}</style>\r\n                <script>${js}</script>\r\n            </html>\r\n            ` )\r\n        },200)\r\n\r\n        return () => clearTimeout(timeout)\r\n    },[html,css,js])\r\n\r\n    useEffect(()=>{\r\n        setLanguageIndex(Index[selectedLanguage]);\r\n    },[selectedLanguage])\r\n\r\n    // Function Handler to change selected language on clicking the file which will result in viewing the contents of that file in the editor\r\n    const ChangeSelectedLanguage = (language,idx) =>{\r\n        setSelectedLanguage(language);\r\n        setLanguageIndex(idx);\r\n    }\r\n\r\n    // Mapping of the list of files into div \r\n    const explorer = fileNames.map((file,idx) => {\r\n        return(\r\n            <div key={idx} className={`PaneContent ${idx===LanguageIndex ? \"active\" : \"\"}`} onClick={() => ChangeSelectedLanguage(Ext[idx],idx)}>\r\n                {file}\r\n            </div>\r\n        )\r\n    })\r\n  \r\n    return(\r\n        <>\r\n            <div className=\"custom-container\">\r\n                <div className=\"custom-row\">\r\n                    <div className=\"ExplorerDiv\">\r\n                        <div id=\"Pane\">\r\n                            <div id=\"PaneTitle\">\r\n                                <b><BsCodeSlash className=\"WebLogo\" style={{marginRight:\"0.5rem\"}}/></b>\r\n                                <i>Easy Coder IDE</i>\r\n                            </div>\r\n                            <div id=\"PaneContents\">\r\n                                {explorer}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"EditDiv\">\r\n                        <div className=\"editor\">\r\n                            <div id=\"EditorComponent\">\r\n                                <Editor language={selectedLanguage} TitleName={selectedLanguage=='xml'?\"html\":selectedLanguage} value={LanguageIndex==0 ? html:LanguageIndex==1 ? css : js} onChange={LanguageIndex==0 ? setHtml : LanguageIndex==1 ? setCss : setJs} fileName={fileNames[LanguageIndex]}/>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"output\">\r\n                            <div className=\"iframeDiv\">\r\n                                <iframe\r\n                                    srcDoc={SrcFile}\r\n                                    title=\"Output\"\r\n                                    sandbox=\"allow-scripts\"\r\n                                    frameBorder=\"0\"\r\n                                    width=\"100%\"\r\n                                    height=\"100%\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Main;\r\n","import './App.css';\nimport Main from \"./Components/Main\";\n\n\nfunction App() {\n  return (\n    <div id=\"MainDiv\" className=\"custom-container\">\n      <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}